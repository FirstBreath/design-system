import{o as r}from"./styled-components.browser.esm-sghPJsyo.js";import"./Button.component-CYSDmoIo.js";import"./Inputs.component-B7OQqNil.js";import"./Card.component-D88qyC_F.js";import"./Badge.component-BBsg0Qix.js";import"./Modal.component-WcjT1K1Y.js";import"./Slider.component-BKjvkFfy.js";import"./SliderIndicator.component-CrC7ycyZ.js";import"./H1.component-DzYfjSGA.js";import"./H2.component-C936ZDdK.js";import"./H3.component-B-uFUJrQ.js";import"./P.component-DIFqaHh2.js";import"./Small.component-DYhasp6b.js";import{R as t}from"./index-B-o1Wr-g.js";import"./_commonjsHelpers-Cpj98o6Y.js";const a={50:"#ffffff",100:"#d5dade",200:"#aab4bd",300:"#808f9b",400:"#55697a",500:"#2b4459",600:"#223647",700:"#1a2935",800:"#111b24",900:"#090e12"},n={primarySwatch:a,colors:{primary:a[500],secondary:a[300],background:a[50],surface:a[100],error:"#d50101",success:"#1ab000",textPrimary:a[900],textSecondary:a[700],border:a[100]},typographies:{h1:{fontFamily:'"Plus Jakarta Sans", sans-serif',fontSize:"72px",fontWeight:600,fontStyle:"normal",lineHeight:"90px",letterSpacing:"-1.44px"},h2:{fontFamily:'"Plus Jakarta Sans", sans-serif',fontSize:"48px",fontWeight:500,fontStyle:"normal",lineHeight:"60px",letterSpacing:"-0.96px"},h3:{fontFamily:'"Plus Jakarta Sans", sans-serif',fontSize:"24px",fontWeight:500,fontStyle:"normal",lineHeight:"32px"},p:{fontFamily:'"Plus Jakarta Sans", sans-serif',fontSize:"16px",fontWeight:400,fontStyle:"normal",lineHeight:"24px"},small:{fontFamily:'"Plus Jakarta Sans", sans-serif',fontSize:"12px",fontWeight:400,fontStyle:"normal",lineHeight:"18px"}},spacing:e=>`${e*4}px`,sizes:{xsmall:"4px",small:"8px",medium:"16px",large:"32px",xlarge:"64px"},borderRadius:"8px",shadows:{default:"0px 1px 2px 0px rgba(16, 24, 40, 0.05)",medium:"5px 5px 10px -3px rgba(16, 24, 40, 0.05)",large:"15px 15px 25px 0px rgba(16, 24, 40, 0.05)"}};try{Button.displayName="Button",Button.__docgenInfo={description:"",displayName:"Button",props:{children:{defaultValue:null,description:"The content of the button",name:"children",required:!0,type:{name:"ReactNode"}},type:{defaultValue:{value:"ButtonType.PRIMARY"},description:"The type of the button",name:"type",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"primary"'},{value:'"secondary"'},{value:'"tertiary"'}]}},size:{defaultValue:{value:"ButtonSize.MEDIUM"},description:"The size of the button",name:"size",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"small"'},{value:'"medium"'},{value:'"large"'}]}},onClick:{defaultValue:null,description:"The click event handler",name:"onClick",required:!1,type:{name:"(() => void) | undefined"}}}}}catch{}try{Input.displayName="Input",Input.__docgenInfo={description:"Input component",displayName:"Input",props:{label:{defaultValue:null,description:"The label for the input field",name:"label",required:!0,type:{name:"string"}},placeholder:{defaultValue:null,description:"The placeholder text for the input field",name:"placeholder",required:!0,type:{name:"string"}},onChange:{defaultValue:null,description:"The change event handler",name:"onChange",required:!1,type:{name:"((value: string) => void) | undefined"}},type:{defaultValue:null,description:"The type of the input field",name:"type",required:!0,type:{name:"string"}},validate:{defaultValue:null,description:"The validation function for the input field",name:"validate",required:!1,type:{name:"((value: string) => string | null) | undefined"}}}}}catch{}try{Card.displayName="Card",Card.__docgenInfo={description:"Card component",displayName:"Card",props:{children:{defaultValue:null,description:"The content of the card",name:"children",required:!0,type:{name:"ReactNode"}}}}}catch{}try{Badge.displayName="Badge",Badge.__docgenInfo={description:"",displayName:"Badge",props:{children:{defaultValue:null,description:"The content of the badge",name:"children",required:!0,type:{name:"ReactNode"}},type:{defaultValue:{value:"BadgeTypes.BADGE"},description:"The type of the badge",name:"type",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"badge"'},{value:'"pill"'}]}},size:{defaultValue:{value:"BadgeSizes.MEDIUM"},description:"The color of the badge",name:"size",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"small"'},{value:'"medium"'},{value:'"large"'}]}},color:{defaultValue:{value:"BadgeColors.PRIMARY"},description:"The size of the badge",name:"color",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"primary"'},{value:'"secondary"'},{value:'"success"'},{value:'"danger"'}]}}}}}catch{}try{Modal.displayName="Modal",Modal.__docgenInfo={description:"Modal component",displayName:"Modal",props:{isOpen:{defaultValue:null,description:"Determines if the modal is open",name:"isOpen",required:!0,type:{name:"boolean"}},onClose:{defaultValue:null,description:"The function to call when the modal is closed",name:"onClose",required:!0,type:{name:"() => void"}},children:{defaultValue:null,description:"The content of the modal",name:"children",required:!0,type:{name:"ReactNode"}}}}}catch{}try{Slider.displayName="Slider",Slider.__docgenInfo={description:"Slider component",displayName:"Slider",props:{elements:{defaultValue:null,description:"The elements to display in the slider",name:"elements",required:!0,type:{name:"ReactNode[]"}}}}}catch{}try{SliderIndicator.displayName="SliderIndicator",SliderIndicator.__docgenInfo={description:"SliderIndicator component",displayName:"SliderIndicator",props:{length:{defaultValue:null,description:"The number of dots to display",name:"length",required:!0,type:{name:"number"}},activeIndex:{defaultValue:null,description:"The index of the currently active dot",name:"activeIndex",required:!0,type:{name:"number"}},onClick:{defaultValue:{value:`() => {
                                                                    }`},description:"The function to call when a dot is clicked",name:"onClick",required:!1,type:{name:"((index: number) => void) | undefined"}}}}}catch{}try{H1.displayName="H1",H1.__docgenInfo={description:"H1 component",displayName:"H1",props:{children:{defaultValue:null,description:"The content to be displayed inside the H1 element",name:"children",required:!0,type:{name:"ReactNode"}}}}}catch{}try{H2.displayName="H2",H2.__docgenInfo={description:"H2 component",displayName:"H2",props:{children:{defaultValue:null,description:"The content to be displayed inside the H2 element",name:"children",required:!0,type:{name:"ReactNode"}}}}}catch{}try{H3.displayName="H3",H3.__docgenInfo={description:"H3 component",displayName:"H3",props:{children:{defaultValue:null,description:"The content to be displayed inside the H3 element",name:"children",required:!0,type:{name:"ReactNode"}}}}}catch{}try{P.displayName="P",P.__docgenInfo={description:"P component",displayName:"P",props:{children:{defaultValue:null,description:"The content to be displayed inside the P element",name:"children",required:!0,type:{name:"ReactNode"}}}}}catch{}try{Small.displayName="Small",Small.__docgenInfo={description:"Small component",displayName:"Small",props:{children:{defaultValue:null,description:"The content to be displayed inside the Small element",name:"children",required:!0,type:{name:"ReactNode"}}}}}catch{}const x=[e=>t.createElement(r,{theme:n},t.createElement(e,null))],S={tags:["autodocs"],parameters:{backgrounds:{values:[{name:"Light",value:n.colors.background}],default:"Light"},controls:{matchers:{color:/(background|color)$/i,date:/Date$/i}}}};export{x as decorators,S as default};
